@using System.ComponentModel.DataAnnotations
@model VisitaFacil.Dominio.Entities.Visitante
@{
    ViewData["Title"] = "Editar Visitante";
}


<script src="@Url.Content("~/Scripts/jquery-1.4.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

<form asp-action="Editar" asp-controller="Visitante" method="post" onChange="ValidarFormulario()">

    <div class="row">
        <div class="col-12">
            <br><br />
            <h1>Editar Visitante</h1>
            <br><br />
        </div>
        <div class="col-6">
            <label class="left-label" for="Nome">Nome Completo:</label>
            <input type="text" name="Nome" id="Nome" asp-for="Nome" />
        </div>
        <div class="col-3">
            @Html.ValidationMessageFor(a => a.Cpf)
            <label class="left-label" for="Cpf">CPF:</label>
            <input type="text" name="Cpf" id="cpf" asp-for="Cpf" onkeyup="validacoesCPF(this.value)" />
            <p id="errorCPF" class="text-danger"></p>
        </div>
        <div class="col-2">
            <label class="left-label" for="dataNascimento">Data de Nascimento:</label>
            <input type="date" name="dataNascimento" id="dataNascimento" asp-for="dataNascimento" placeholder="Data de Nascimento" />
        </div>
        <div class="col-3">
            <label class="left-label" for="CEP">CEP:</label>
            <input type="text" name="CEP" id="cep" onblur="pesquisacep(this.value)" asp-for="CEP" />
        </div>
        <div class="col-6">
            <label class="left-label" for="Logradouro">Logradouro:</label>
            <input type="text" name="Logradouro" id="rua" asp-for="Logradouro" />
        </div>
        <div class="col-2">
            <label class="left-label" for="Numero">Número:</label>
            <input type="text" name="Numero" id="numero" asp-for="Numero" />
        </div>
        <div class="col-2">
            <label class="left-label" for="Complemento">Complemento:</label>
            <input type="text" name="Complemento" id="complemento" asp-for="Complemento" />
        </div>
        <div class="col-4">
            <label class="left-label" for="Bairro">Bairro:</label>
            <input type="text" name="Bairro" id="bairro" asp-for="Bairro" />
        </div>
        <div class="col-3">
            <label class="left-label" for="Cidade">Cidade:</label>
            <input type="text" name="Cidade" id="cidade" asp-for="Cidade" />
        </div>
        <div class="col-2">
            <label class="left-label" for="Estado">Estado:</label>
            <input type="text" name="Estado" id="uf" asp-for="Estado" />
        </div>
        <div class="col-4">
            <label class="left-label" for="Telefone">Telefone:</label>
            <input type="text" id="telefone" asp-for="Telefone" />
        </div>
        <div class="col-4">
            <label class="left-label" for="Email">Email:</label>
            <input type="email" name="Email" asp-for="Email" />
        </div>
        <div class="col-12">
            <input type="hidden" asp-for="idVisitante" />
        </div>
    </div>


    <div class="flex-container">
        <a href="@Url.Action("Index", "Visitante")" class="btn-grad-cinza">Voltar</a>
        <button type="submit" id="btnEditar" class="btn-grad">Editar</button>
    </div>
</form>

<script>
    const container = document.getElementById('container');
    const btnEditar = document.getElementById('btnEditar');

            btnEditar.addEventListener('click', () =>   
            {

            if (@ValidationResult.Success) 
            {
                alert('Edição Realizada com Sucesso');
                container.classList.add('left-panel-active');
                return RedirectToAction("Index");
            }
            else 
            {
                alert('Erro ao salvar as alterações:');
                return View(ent);
            }

            });
</script>

<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        font-family: 'Libre Franklin', sans-serif;
    }

    h1 {
        font-weight: bold;
        margin: 0;
        margin-bottom: 1rem;
    }

    .left-label {
        text-align: left;
        display: block;
        margin-bottom: 5px;
    }

    p {
        font-size: 14px;
        font-weight: 100;
        line-height: 20px;
        letter-spacing: 0.5px;
        margin: 20px 0 30px;
    }

    .btn-grad-cinza {
        background-image: linear-gradient(to right, #808080 0%, #555555 51%, #808080 100%);
    }

    .btn-grad-cinza {
        margin: 5px;
        padding: 10px 25px;
        text-align: center;
        text-transform: uppercase;
        transition: 0.5s;
        background-size: 200% auto;
        color: white;
        border-radius: 10px;
        display: block;
        cursor: pointer;
    }

        .btn-grad-cinza:hover {
            background-position: right center; /* change the direction of the change here */
            color: #fff;
            text-decoration: none;
        }

    .flex-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px; /* Ajuste conforme necessário */
    }

    span {
        font-size: 12px;
    }

    a {
        color: #333;
        font-size: 14px;
        text-decoration: none;
        margin: 15px 0;
    }


    .btn-grad {
        background-image: linear-gradient(to right, #6441A5 0%, #2a0845 51%, #6441A5 100%)
    }

    .btn-grad {
        margin: 5px;
        padding: 10px 25px;
        text-align: center;
        text-transform: uppercase;
        transition: 0.5s;
        background-size: 200% auto;
        color: white;
        border-radius: 10px;
        display: block;
        cursor: pointer;
    }

        .btn-grad:hover {
            background-position: right center; /* change the direction of the change here */
            color: #fff;
            text-decoration: none;
        }

    #signIn {
        background-image: linear-gradient(to right, #fff 0%, #f7f3f3 51%, #fff 100%);
        color: #6441A5;
    }

    #signUp {
        background-image: linear-gradient(to right, #fff 0%, #f7f3f3 51%, #fff 100%);
        color: #6441A5;
    }

    form {
        background-color: #ffffff;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 0 50px;
        height: 100%;
        text-align: center;
    }

    input {
        background-color: #eee;
        border: none;
        padding: 8px 10px;
        margin: 5px 0;
        width: 100%;
    }

    .body-container {
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background: #4568DC; /* fallback for old browsers */
        background: -webkit-linear-gradient(to right, #B06AB3, #4568DC)*/; /* Chrome 10-25, Safari 5.1-6 */
        background: linear-gradient(to right, #B06AB3, #4568DC);
        
        transition: all 0.6s ease-in-out;
    }

  

    @@keyframes show {
        0%,
        49.99% {
            opacity: 0;
            z-index: 1;
        }

        50%,
        100% {
            opacity: 1;
            z-index: 5;
        }
    }

</style>

<script>
    function ValidarFormulario() {
        const camposInvalidos = document.getElementsByClassName("text-danger");
        const btnCadastrar = document.getElementById("btnCadastrar");
        if (camposInvalidos.length > 0) {
            btnCadastrar.disabled = true;
        } else {
            btnCadastrar.disabled = false;
        }
    }
    function validacoesCPF(valorCPF) {
        const valorSemPontuacao = valorCPF.replace(".", "").replace(".", "").replace(".", "").replace("-", "");

        const CPFEstaValido = this.CpfValido(valorSemPontuacao);
        if (!CPFEstaValido) {
            const errorCPF = document.getElementById("errorCPF");
            errorCPF.innerHTML = "CPF Inválido";
            errorCPF.classList.add("text-danger");
        } else {
            const errorCPF = document.getElementById("errorCPF");
            errorCPF.innerHTML = "";
            errorCPF.classList.remove("text-danger");
        }
    }

    function CpfValido(cpf) {
        const cpfsInvalidos = [
            "00000000000", "11111111111", "22222222222", "33333333333", "44444444444",
            "55555555555", "66666666666", "77777777777", "88888888888", "99999999999"
        ]
        if (cpfsInvalidos.includes(cpf)) return false;
        if (cpf.length != 11) return false;

        var soma = 0;
        var resto;

        for (i = 1; i <= 9; i++) {
            soma = soma + (parseInt(cpf.substring(i - 1, i)) * (11 - i));
        }

        resto = (soma * 10) % 11;
        if ((resto == 10) || (resto == 11))
            resto = 0;

        if (resto != parseInt(cpf.substring(9, 10)))
            return false;

        soma = 0;
        for (i = 1; i <= 10; i++) {
            soma = soma + (parseInt(cpf.substring(i - 1, i)) * (12 - i))
        };

        resto = (soma * 10) % 11;
        if ((resto == 10) || (resto == 11))
            resto = 0;

        if (resto != parseInt(cpf.substring(10, 11)))
            return false;

        return true;
    }
</script>

<script type="text/javascript" src="index.js"></script>
<script>
    const container = document.getElementById('container');
    const btnCadastrar = document.getElementById('btnCadastrar');
    const signUpBtn = document.getElementById('signUp'); // Adicione esta linha
    const signInBtn = document.getElementById('signIn'); // Adicione esta linha

    btnCadastrar.addEventListener('click', () => {
        alert('Usuário Cadastrado com Sucesso');
        container.classList.add('left-panel-active');
    });

    signUpBtn.addEventListener('click', () => {
        container.classList.add('right-panel-active');
    });

    signInBtn.addEventListener('click', () => {
        container.classList.remove('right-panel-active');
    });
</script>

<script>
    document.getElementById('telefone').addEventListener('input', function (event) {
        let inputValue = event.target.value.replace(/\D/g, '');
        if (inputValue.length > 11) {
            inputValue = inputValue.substring(0, 11);
        }
        let formattedValue = '(' + inputValue.substring(0, 2) + ') ' + inputValue.substring(2, 7) + '-' + inputValue.substring(7, 11);
        event.target.value = formattedValue;
    });
</script>

<script>
    document.getElementById('cep').addEventListener('input', function (event) {
        let inputValue = event.target.value.replace(/\D/g, '');
        if (inputValue.length > 8) {
            inputValue = inputValue.substring(0, 8);
        }
        let formattedValue = inputValue.replace(/(\d{5})(\d{3})/, '$1-$2');
        event.target.value = formattedValue;
    });
</script>

<script>
    document.getElementById('cpf').addEventListener('input', function (event) {
        let inputValue = event.target.value.replace(/\D/g, '');
        if (inputValue.length > 11) {
            inputValue = inputValue.substring(0, 11);
        }
        let formattedValue = inputValue.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
        event.target.value = formattedValue;
    });
</script>

<script>
    function meu_callback(conteudo) {
        if (!("erro" in conteudo)) {
            // Atualiza os campos com os valores.
            document.getElementById('rua').value = conteudo.logradouro;
            document.getElementById('bairro').value = conteudo.bairro;
            document.getElementById('cidade').value = conteudo.localidade;
            document.getElementById('uf').value = conteudo.uf;
        } else {
            // CEP não Encontrado.
            limpa_formulário_cep();
            alert("CEP não encontrado.");
        }
    }

    function pesquisacep(valor) {
        //Nova variável "cep" somente com dígitos.
        var cep = valor.replace(/\D/g, '');

        //Verifica se campo cep possui valor informado.
        if (cep != "") {
            //Expressão regular para validar o CEP.
            var validacep = /^[0-9]{8}$/;

            //Valida o formato do CEP.
            if (validacep.test(cep)) {
                // Preenche os campos com "..." enquanto consulta webservice.
                document.getElementById('rua').value = "...";
                document.getElementById('bairro').value = "...";
                document.getElementById('cidade').value = "...";
                document.getElementById('uf').value = "...";

                //Cria um elemento javascript.
                var script = document.createElement('script');

                //Sincroniza com o callback.
                script.src = 'https://viacep.com.br/ws/' + cep + '/json/?callback=meu_callback';

                //Insere script no documento e carrega o conteúdo.
                document.body.appendChild(script);
            } else {
                //cep é inválido.
                limpa_formulário_cep();
                alert("Formato de CEP inválido.");
            }
        } else {
            //cep sem valor, limpa formulário.
            limpa_formulário_cep();
        }
    };
</script>

<script src="/js/site.js"></script>